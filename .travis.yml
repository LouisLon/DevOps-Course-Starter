sudo: required
language: python
services:
- docker
before_install:
# - docker build --target test --tag todo-app:test .
- docker login --username="$HEROKU_USERNAME" --password=$(heroku auth:"$HEROKU_APIKEY") registry.heroku.com
- echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
#- wget -qO- https://toolbelt.heroku.com/install.sh | sh #installed heroku CLI
- curl https://toolbelt.heroku.com/install.sh | sh  #install heroku
#- docker login -u "$HEROKU_USERNAME" --password="$HEROKU_APIKEY" registry.heroku.com #logged in
#- echo "$HEROKU_APIKEY" | docker login -u "$HEROKU_USERNAME" --password-stdin registry.heroku.com
 
script:
# - docker run --mount type=bind,source="$(pwd)"/todo_app,target=/app/todo_app todo-app:test  todo_app/tests/
# - docker run --env TRELLO_KEY=$TRELLO_KEY --env TRELLO_TOKEN=$TRELLO_TOKEN --mount type=bind,source="$(pwd)"/todo_app,target=/app/todo_app todo-app:test  todo_app/tests_e2e/
- echo "registry.heroku.com/$HEROKU_APP/web"

after_success:
- docker build --target production --tag todo-app:prod .
- docker tag todo-app:prod "$DOCKER_USERNAME"/todo-app:latest
- docker tag todo-app:prod registry.heroku.com/trelloappex8/web
- docker push "$DOCKER_USERNAME"/todo-app      
- docker push registry.heroku.com/trelloappex8/web
- heroku container:release web --app trelloappex8 

# deploy:
# - provider: script
#   skip_cleanup: true
#   script:   
#       docker push "$DOCKER_USERNAME"/todo-app;      
#       docker push registry.heroku.com/$HEROKU_APP/web; 
#       heroku container:release web --app $HEROKU_APP 
#   on:
#     branch: master
# deploy:   
#         provider: script
#         script: 
#                docker push aabhusan/koora:v1;
#                docker push registry.heroku.com/$HEROKU_APP/web;
#                heroku container:release web --app $HEROKU_APP
#   on:
#       branch: master


# services:
# - docker
# before_install:
# - docker build --target test --tag todo-app:test .
# script:
# - docker run --mount type=bind,source="$(pwd)"/todo_app,target=/app/todo_app todo-app:test  todo_app/tests/
# - docker run --env TRELLO_KEY=$TRELLO_KEY --env TRELLO_TOKEN=$TRELLO_TOKEN --mount type=bind,source="$(pwd)"/todo_app,target=/app/todo_app todo-app:test  todo_app/tests_e2e/

# deploy:
#   provider: script
#   script: 
#     heroku container:release web --app your-app-name

#   - ./build/set_pass.sh
#   - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin && docker logout
# # - docker run --env TRELLO_KEY=[TRELLO_KEY] --env TRELLO_TOKEN=[TRELLO_TOKEN] --env TRELLO_BOARD_ID=[TRELLO_BOARD_ID] -d -p 127.0.0.1:5000:5000 todo-app:latest

# # - docker push "$DOCKER_USERNAME"/trelloapp
#- docker run --mount type=bind,source="$(pwd)"/todo_app,target=/app/todo_app "$DOCKER_USERNAME"/todo-app:latest todo_app/tests/
# # # - docker run --env TRELLO_KEY=$TRELLO_KEY --env TRELLO_TOKEN=$TRELLO_TOKEN --mount type=bind,source="$(pwd)"/todo_app,target=/app/todo_app todo-app:test  todo_app/tests_e2e/
# # - docker build --target production --tag todo-app:latest .
# # $ docker push <image_tag> 


# docker build --target production --tag todo-app:prod .
# docker tag todo-app:prod louiseg/todo-app:latest
# docker push louiseg/todo-app

# heroku login
# heroku container:login
# docker pull louiseg/todo-app:latest
# docker tag louiseg/todo-app:latest registry.heroku.com/trelloappex8/web
# docker push registry.heroku.com/trelloappex8/web
# heroku container:release web -a trelloappex8 